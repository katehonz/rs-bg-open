import { useState, useCallback } from 'react';

export default function UniversalImport() {
  const [dragOver, setDragOver] = useState(false);
  const [uploadedFiles, setUploadedFiles] = useState([]);
  const [selectedTemplate, setSelectedTemplate] = useState('custom');

  const acceptedFormats = ['.xlsx', '.csv', '.json', '.xml'];
  
  const templates = {
    custom: { name: '–†—ä—á–Ω–æ –º–∞–ø–∏—Ä–∞–Ω–µ', icon: '‚öôÔ∏è', description: '–°–≤–æ–±–æ–¥–Ω–æ –º–∞–ø–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–∞—Ç–∞' },
    journal: { name: '–î–Ω–µ–≤–Ω–∏–∫ –∑–∞–ø–∏—Å–∏', icon: 'üìù', description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–µ–Ω —Ñ–æ—Ä–º–∞—Ç –∑–∞ —Å—á–µ—Ç–æ–≤–æ–¥–Ω–∏ –∑–∞–ø–∏—Å–∏' },
    accounts: { name: '–°–º–µ—Ç–∫–æ–ø–ª–∞–Ω', icon: 'üóÇÔ∏è', description: '–ò–º–ø–æ—Ä—Ç –Ω–∞ —Å–º–µ—Ç–∫–∏ –∏ —Å–∞–ª–¥–∞' },
    counterparts: { name: '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∏', icon: 'üë•', description: '–°–ø–∏—Å—ä–∫ —Å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∏' }
  };
  
  const features = [
    'Excel –∏ CSV —Ñ–∞–π–ª–æ–≤–µ',
    'JSON —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–∞–Ω –∏–º–ø–æ—Ä—Ç',
    '–°–≤–æ–±–æ–¥–Ω–æ –º–∞–ø–∏—Ä–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–∞',
    'Bulk –∏–º–ø–æ—Ä—Ç –Ω–∞ –∑–∞–ø–∏—Å–∏',
    '–í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–µ–Ω –ø—Ä–µ–≥–ª–µ–¥',
    '–®–∞–±–ª–æ–Ω–∏ –∑–∞ –∏–º–ø–æ—Ä—Ç'
  ];

  const handleDragOver = useCallback((e) => {
    e.preventDefault();
    setDragOver(true);
  }, []);

  const handleDragLeave = useCallback((e) => {
    e.preventDefault();
    setDragOver(false);
  }, []);

  const handleDrop = useCallback((e) => {
    e.preventDefault();
    setDragOver(false);
    
    const files = Array.from(e.dataTransfer.files);
    const validFiles = files.filter(file => 
      acceptedFormats.some(format => file.name.toLowerCase().endsWith(format))
    );
    
    if (validFiles.length > 0) {
      setUploadedFiles(prev => [...prev, ...validFiles.map(file => ({
        name: file.name,
        size: file.size,
        type: file.type,
        status: 'pending',
        file: file,
        template: selectedTemplate
      }))]);
    }
  }, [selectedTemplate]);

  const handleFileSelect = useCallback((e) => {
    const files = Array.from(e.target.files);
    setUploadedFiles(prev => [...prev, ...files.map(file => ({
      name: file.name,
      size: file.size,
      type: file.type,
      status: 'pending',
      file: file,
      template: selectedTemplate
    }))]);
  }, [selectedTemplate]);

  const formatFileSize = (bytes) => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  const removeFile = (index) => {
    setUploadedFiles(prev => prev.filter((_, i) => i !== index));
  };

  const startImport = async () => {
    if (uploadedFiles.length === 0) return;
    
    // TODO: Implement universal import logic
    console.log('Starting universal import with template:', selectedTemplate);
    console.log('Files:', uploadedFiles);
    
    // Simulate processing
    setUploadedFiles(prev => prev.map(file => ({ ...file, status: 'processing' })));
    
    setTimeout(() => {
      setUploadedFiles(prev => prev.map(file => ({ ...file, status: 'completed' })));
    }, 3000);
  };

  const downloadTemplate = (templateType) => {
    // TODO: Generate and download template file
    console.log('Downloading template:', templateType);
  };

  return (
    <div className="space-y-6">
      {/* Source Info */}
      <div className="flex items-start space-x-4">
        <div className="text-4xl">üìä</div>
        <div>
          <h3 className="text-lg font-semibold text-gray-900">
            –£–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
          </h3>
          <p className="text-gray-600 mb-3">
            –ò–º–ø–æ—Ä—Ç –æ—Ç Excel, CSV –∏ –¥—Ä—É–≥–∏ —Ñ–æ—Ä–º–∞—Ç–∏ —Å –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç –∑–∞ —Å–≤–æ–±–æ–¥–Ω–æ –º–∞–ø–∏—Ä–∞–Ω–µ
          </p>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
            {features.map((feature, index) => (
              <div key={index} className="flex items-center space-x-2">
                <span className="w-2 h-2 bg-green-400 rounded-full"></span>
                <span className="text-sm text-gray-700">{feature}</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Template Selection */}
      <div className="space-y-4">
        <div className="flex items-center justify-between">
          <h4 className="text-sm font-medium text-gray-900">–ò–∑–±–æ—Ä –Ω–∞ —à–∞–±–ª–æ–Ω:</h4>
          <button
            onClick={() => downloadTemplate(selectedTemplate)}
            className="text-xs text-blue-600 hover:text-blue-700 font-medium"
          >
            üì• –ò–∑—Ç–µ–≥–ª–∏ —à–∞–±–ª–æ–Ω
          </button>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {Object.entries(templates).map(([key, template]) => (
            <button
              key={key}
              onClick={() => setSelectedTemplate(key)}
              className={`p-4 border-2 rounded-lg text-left transition-colors ${
                selectedTemplate === key
                  ? 'border-green-500 bg-green-50'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              <div className="flex items-start space-x-3">
                <div className="text-2xl">{template.icon}</div>
                <div>
                  <div className="font-medium text-gray-900">{template.name}</div>
                  <div className="text-sm text-gray-600 mt-1">
                    {template.description}
                  </div>
                </div>
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* Upload Area */}
      <div
        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
          dragOver
            ? 'border-green-500 bg-green-50'
            : 'border-gray-300 hover:border-gray-400'
        }`}
        onDragOver={handleDragOver}
        onDragLeave={handleDragLeave}
        onDrop={handleDrop}
      >
        <div className="space-y-4">
          <div className="text-4xl">üìä</div>
          <div>
            <p className="text-lg font-medium text-gray-900">
              –ü—É—Å–Ω–µ—Ç–µ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ –∑–∞ –∏–º–ø–æ—Ä—Ç —Ç—É–∫ –∏–ª–∏
            </p>
            <label className="cursor-pointer">
              <span className="text-green-600 hover:text-green-700 font-medium">
                –∏–∑–±–µ—Ä–µ—Ç–µ —Ñ–∞–π–ª–æ–≤–µ
              </span>
              <input
                type="file"
                multiple
                accept={acceptedFormats.join(',')}
                onChange={handleFileSelect}
                className="hidden"
              />
            </label>
          </div>
          <p className="text-sm text-gray-500">
            –ü–æ–¥–¥—ä—Ä–∂–∞–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∏: {acceptedFormats.join(', ')}
          </p>
          <div className="text-xs text-gray-500">
            –ú–∞–∫—Å–∏–º—É–º 20 —Ñ–∞–π–ª–∞, –¥–æ 100MB –≤—Å–µ–∫–∏
          </div>
        </div>
      </div>

      {/* Uploaded Files */}
      {uploadedFiles.length > 0 && (
        <div className="space-y-4">
          <h4 className="text-sm font-medium text-gray-900">
            –ö–∞—á–µ–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ ({uploadedFiles.length})
          </h4>
          <div className="space-y-2">
            {uploadedFiles.map((file, index) => (
              <div
                key={index}
                className="flex items-center justify-between p-3 bg-gray-50 rounded-lg border"
              >
                <div className="flex items-center space-x-3">
                  <div className="text-xl">
                    {file.name.endsWith('.xlsx') ? 'üìä' : 
                     file.name.endsWith('.csv') ? 'üìÑ' :
                     file.name.endsWith('.json') ? 'üìã' : 'üìÑ'}
                  </div>
                  <div>
                    <p className="text-sm font-medium text-gray-900">
                      {file.name}
                    </p>
                    <p className="text-xs text-gray-500">
                      {formatFileSize(file.size)} ‚Ä¢ {templates[file.template]?.name}
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <span
                    className={`px-2 py-1 text-xs rounded-full font-medium ${
                      file.status === 'pending'
                        ? 'bg-yellow-100 text-yellow-800'
                        : file.status === 'processing'
                        ? 'bg-green-100 text-green-800'
                        : file.status === 'completed'
                        ? 'bg-green-100 text-green-800'
                        : 'bg-red-100 text-red-800'
                    }`}
                  >
                    {file.status === 'pending' && '–ß–∞–∫–∞'}
                    {file.status === 'processing' && '–û–±—Ä–∞–±–æ—Ç–≤–∞ —Å–µ'}
                    {file.status === 'completed' && '–ì–æ—Ç–æ–≤'}
                    {file.status === 'error' && '–ì—Ä–µ—à–∫–∞'}
                  </span>
                  <button
                    onClick={() => removeFile(index)}
                    className="p-1 text-gray-400 hover:text-red-600 transition-colors"
                  >
                    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              </div>
            ))}
          </div>
          
          <div className="flex justify-end space-x-3">
            <button
              onClick={() => setUploadedFiles([])}
              className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
            >
              –ò–∑—á–∏—Å—Ç–∏ –≤—Å–∏—á–∫–∏
            </button>
            <button
              onClick={startImport}
              className="px-4 py-2 text-sm font-medium text-white bg-green-600 border border-transparent rounded-md hover:bg-green-700 transition-colors"
            >
              –ó–∞–ø–æ—á–Ω–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
            </button>
          </div>
        </div>
      )}

      {/* Template Info */}
      <div className="bg-green-50 rounded-lg p-4">
        <div className="flex items-start space-x-3">
          <div className="text-green-500 text-xl">üí°</div>
          <div className="text-sm text-green-800">
            <div className="font-medium mb-1">–ó–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω –∏–º–ø–æ—Ä—Ç:</div>
            {selectedTemplate === 'custom' && (
              <ul className="space-y-1 text-sm">
                <li>‚Ä¢ –°–≤–æ–±–æ–¥–Ω–æ –º–∞–ø–∏—Ä–∞–Ω–µ - –º–æ–∂–µ—Ç–µ –¥–∞ –¥–µ—Ñ–∏–Ω–∏—Ä–∞—Ç–µ –∫–∞–∫ —Å–µ —Å–≤—ä—Ä–∑–≤–∞—Ç –∫–æ–ª–æ–Ω–∏—Ç–µ</li>
                <li>‚Ä¢ –ü–æ–¥–¥—Ä—ä–∂–∫–∞ –∑–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –æ—Ç Excel –∏ CSV</li>
                <li>‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ –ø—Ä–µ–¥–∏ –æ–∫–æ–Ω—á–∞—Ç–µ–ª–µ–Ω –∏–º–ø–æ—Ä—Ç</li>
                <li>‚Ä¢ –í—ä–∑–º–æ–∂–Ω–æ—Å—Ç –∑–∞ –∑–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –º–∞–ø–∏–Ω–≥–∞ –∑–∞ –±—ä–¥–µ—â–∏ –∏–º–ø–æ—Ä—Ç–∏</li>
              </ul>
            )}
            {selectedTemplate === 'journal' && (
              <ul className="space-y-1 text-sm">
                <li>‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–µ–Ω —Ñ–æ—Ä–º–∞—Ç: –î–∞—Ç–∞, –î–æ–∫—É–º–µ–Ω—Ç, –û–ø–∏—Å–∞–Ω–∏–µ, –°–º–µ—Ç–∫–∞, –î–µ–±–∏—Ç, –ö—Ä–µ–¥–∏—Ç</li>
                <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞ –±–∞–ª–∞–Ω—Å–∏—Ä–∞–Ω–æ—Å—Ç</li>
                <li>‚Ä¢ –ü–æ–¥–¥—Ä—ä–∂–∫–∞ –∑–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</li>
                <li>‚Ä¢ –ì—Ä—É–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞–ø–∏—Å–∏ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç</li>
              </ul>
            )}
            {selectedTemplate === 'accounts' && (
              <ul className="space-y-1 text-sm">
                <li>‚Ä¢ –ò–º–ø–æ—Ä—Ç –Ω–∞ —Å–º–µ—Ç–∫–∏ –æ—Ç —Å–º–µ—Ç–∫–æ–ø–ª–∞–Ω–∞</li>
                <li>‚Ä¢ –§–æ—Ä–º–∞—Ç: –ö–æ–¥, –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –¢–∏–ø, –°–∞–ª–¥–æ</li>
                <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –π–µ—Ä–∞—Ä—Ö–∏—á–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞</li>
                <li>‚Ä¢ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞ –¥—É–±–ª–∏–∫–∞—Ç–∏ –∏ –≥—Ä–µ—à–Ω–∏ –∫–æ–¥–æ–≤–µ</li>
              </ul>
            )}
            {selectedTemplate === 'counterparts' && (
              <ul className="space-y-1 text-sm">
                <li>‚Ä¢ –ò–º–ø–æ—Ä—Ç –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∏ —Å –ø—ä–ª–Ω–∏ –¥–∞–Ω–Ω–∏</li>
                <li>‚Ä¢ –§–æ—Ä–º–∞—Ç: –ò–º–µ, –ë–£–õ–°–¢–ê–¢, –î–î–° –Ω–æ–º–µ—Ä, –ê–¥—Ä–µ—Å, –ì—Ä–∞–¥</li>
                <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –ë–£–õ–°–¢–ê–¢ –∏ –î–î–°</li>
                <li>‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç–∏</li>
              </ul>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}