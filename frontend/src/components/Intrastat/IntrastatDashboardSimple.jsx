import React, { useState, useEffect } from 'react';

const IntrastatDashboard = ({ companyId }) => {
  const [settings, setSettings] = useState(null);
  const [declarations, setDeclarations] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedYear] = useState(new Date().getFullYear());
  const [selectedMonth] = useState(new Date().getMonth() + 1);

  // Mock data for demonstration
  useEffect(() => {
    setTimeout(() => {
      setSettings({
        isEnabled: false,
        arrivalThresholdBgn: 400000,
        dispatchThresholdBgn: 400000,
        currentArrivalThresholdBgn: 150000,
        currentDispatchThresholdBgn: 280000,
        autoGenerateDeclarations: false,
        responsiblePersonName: '',
        responsiblePersonPhone: '',
        responsiblePersonEmail: ''
      });
      
      setDeclarations([
        {
          id: 1,
          declarationType: 'ARRIVAL',
          referencePeriod: '202411',
          totalItems: 15,
          totalInvoiceValue: 25000,
          status: 'DRAFT'
        },
        {
          id: 2,
          declarationType: 'DISPATCH', 
          referencePeriod: '202411',
          totalItems: 8,
          totalInvoiceValue: 35000,
          status: 'SUBMITTED'
        }
      ]);
      
      setLoading(false);
    }, 1000);
  }, [companyId]);

  const getStatusBadge = (status) => {
    const variants = {
      DRAFT: 'bg-gray-100 text-gray-800',
      SUBMITTED: 'bg-blue-100 text-blue-800',
      ACCEPTED: 'bg-green-100 text-green-800',
      REJECTED: 'bg-red-100 text-red-800'
    };
    
    const labels = {
      DRAFT: 'Чернова',
      SUBMITTED: 'Подадена',
      ACCEPTED: 'Приета',
      REJECTED: 'Отхвърлена'
    };

    return (
      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${variants[status]}`}>
        {labels[status]}
      </span>
    );
  };

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('bg-BG', {
      style: 'currency',
      currency: 'BGN',
      minimumFractionDigits: 2
    }).format(amount);
  };

  const arrivalExceeded = settings && settings.currentArrivalThresholdBgn >= settings.arrivalThresholdBgn;
  const dispatchExceeded = settings && settings.currentDispatchThresholdBgn >= settings.dispatchThresholdBgn;

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="text-gray-500">Зареждане...</div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h1 className="text-3xl font-bold">INTRASTAT Модул</h1>
        <button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md font-medium">
          Нова декларация
        </button>
      </div>

      {(arrivalExceeded || dispatchExceeded) && (
        <div className="bg-yellow-50 border border-yellow-200 rounded-md p-4">
          <div className="flex">
            <div className="flex-shrink-0">
              <span className="text-yellow-400">⚠️</span>
            </div>
            <div className="ml-3">
              <h3 className="text-sm font-medium text-yellow-800">
                Внимание! Прагът за INTRASTAT декларации е надвишен за:
              </h3>
              <div className="mt-2 text-sm text-yellow-700">
                {arrivalExceeded && <div>• Пристигания</div>}
                {dispatchExceeded && <div>• Изпращания</div>}
              </div>
            </div>
          </div>
        </div>
      )}

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="bg-white rounded-lg shadow border border-gray-200">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900">Статус на модула</h3>
          </div>
          <div className="p-6">
            <div className="space-y-3">
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600">Активен:</span>
                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                  settings?.isEnabled ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'
                }`}>
                  {settings?.isEnabled ? 'Да' : 'Не'}
                </span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600">Автоматично генериране:</span>
                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                  settings?.autoGenerateDeclarations ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'
                }`}>
                  {settings?.autoGenerateDeclarations ? 'Да' : 'Не'}
                </span>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow border border-gray-200">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900">Прагове (BGN)</h3>
          </div>
          <div className="p-6">
            <div className="space-y-3">
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600">Пристигания:</span>
                <span className="text-sm font-mono">
                  {Number(settings?.currentArrivalThresholdBgn || 0).toLocaleString()} / 
                  {Number(settings?.arrivalThresholdBgn || 0).toLocaleString()}
                </span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-600">Изпращания:</span>
                <span className="text-sm font-mono">
                  {Number(settings?.currentDispatchThresholdBgn || 0).toLocaleString()} / 
                  {Number(settings?.dispatchThresholdBgn || 0).toLocaleString()}
                </span>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow border border-gray-200">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900">Отговорно лице</h3>
          </div>
          <div className="p-6">
            <div className="space-y-1 text-sm">
              <p className="font-medium">{settings?.responsiblePersonName || 'Не е посочено'}</p>
              <p className="text-gray-600">{settings?.responsiblePersonPhone}</p>
              <p className="text-gray-600">{settings?.responsiblePersonEmail}</p>
            </div>
          </div>
        </div>
      </div>

      <div className="bg-white rounded-lg shadow border border-gray-200">
        <div className="px-6 py-4 border-b border-gray-200">
          <div className="flex justify-between items-center">
            <h3 className="text-lg font-semibold text-gray-900">
              Декларации за {selectedYear}/{String(selectedMonth).padStart(2, '0')}
            </h3>
            <div className="flex gap-2">
              <select className="px-3 py-1 border border-gray-300 rounded-md text-sm">
                <option value="2024">2024</option>
                <option value="2023">2023</option>
              </select>
              <select className="px-3 py-1 border border-gray-300 rounded-md text-sm">
                <option value="11">11</option>
                <option value="10">10</option>
                <option value="9">9</option>
              </select>
            </div>
          </div>
        </div>
        <div className="p-6">
          <div className="overflow-hidden shadow ring-1 ring-black ring-opacity-5 rounded-lg">
            <table className="min-w-full divide-y divide-gray-300">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Тип
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Период
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Артикули
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Стойност (BGN)
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Статус
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Действия
                  </th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200 bg-white">
                {declarations.map((declaration) => (
                  <tr key={declaration.id}>
                    <td className="px-6 py-4 whitespace-nowrap text-sm">
                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                        declaration.declarationType === 'ARRIVAL' ? 'bg-blue-100 text-blue-800' : 'bg-purple-100 text-purple-800'
                      }`}>
                        {declaration.declarationType === 'ARRIVAL' ? 'Пристигания' : 'Изпращания'}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">
                      {declaration.referencePeriod}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {declaration.totalItems}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">
                      {formatCurrency(declaration.totalInvoiceValue)}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm">
                      {getStatusBadge(declaration.status)}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <div className="flex gap-2">
                        <button className="text-blue-600 hover:text-blue-900 font-medium">
                          Преглед
                        </button>
                        <button className="text-green-600 hover:text-green-900 font-medium">
                          XML
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
                {declarations.length === 0 && (
                  <tr>
                    <td colSpan="6" className="px-6 py-4 text-center text-gray-500">
                      Няма декларации за избрания период
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
};

export default IntrastatDashboard;