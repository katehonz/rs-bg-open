import { useState, useEffect } from 'react';
import { graphqlRequest } from '../../utils/graphqlClient';

const GET_AI_ACCOUNTING_SETTINGS = `
  query GetAiAccountingSettings($companyId: Int!) {
    aiAccountingSettings(companyId: $companyId) {
      id
      companyId
      salesRevenueAccount
      salesServicesAccount
      salesReceivablesAccount
      purchaseExpenseAccount
      purchasePayablesAccount
      vatInputAccount
      vatOutputAccount
      nonRegisteredPersonsAccount
      nonRegisteredVatOperation
      accountCodeLength
      salesDescriptionTemplate
      purchaseDescriptionTemplate
      createdAt
      updatedAt
    }
  }
`;

const UPSERT_AI_ACCOUNTING_SETTINGS = `
  mutation UpsertAiAccountingSettings($input: CreateAiAccountingSettingInput!) {
    upsertAiAccountingSettings(input: $input) {
      id
      companyId
      salesRevenueAccount
      salesServicesAccount
      salesReceivablesAccount
      purchaseExpenseAccount
      purchasePayablesAccount
      vatInputAccount
      vatOutputAccount
      nonRegisteredPersonsAccount
      nonRegisteredVatOperation
      accountCodeLength
      salesDescriptionTemplate
      purchaseDescriptionTemplate
    }
  }
`;

export default function AIAccountingSettings({ companyId }) {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [formData, setFormData] = useState({
    salesRevenueAccount: '701',
    salesServicesAccount: '703',
    salesReceivablesAccount: '411',
    purchaseExpenseAccount: '602',
    purchasePayablesAccount: '401',
    vatInputAccount: '4531',
    vatOutputAccount: '4531',
    nonRegisteredPersonsAccount: '',
    nonRegisteredVatOperation: '–ø–æ–∫09',
    accountCodeLength: 3,
    salesDescriptionTemplate: '{counterpart} - {document_number}',
    purchaseDescriptionTemplate: '{counterpart} - {document_number}'
  });

  useEffect(() => {
    if (companyId) {
      loadSettings();
    }
  }, [companyId]);

  const loadSettings = async () => {
    try {
      setLoading(true);
      setError(null);
      const data = await graphqlRequest(GET_AI_ACCOUNTING_SETTINGS, { companyId });

      if (data.aiAccountingSettings) {
        const settings = data.aiAccountingSettings;
        setFormData({
          salesRevenueAccount: settings.salesRevenueAccount || '701',
          salesServicesAccount: settings.salesServicesAccount || '703',
          salesReceivablesAccount: settings.salesReceivablesAccount || '411',
          purchaseExpenseAccount: settings.purchaseExpenseAccount || '602',
          purchasePayablesAccount: settings.purchasePayablesAccount || '401',
          vatInputAccount: settings.vatInputAccount || '4531',
          vatOutputAccount: settings.vatOutputAccount || '4531',
          nonRegisteredPersonsAccount: settings.nonRegisteredPersonsAccount || '',
          nonRegisteredVatOperation: settings.nonRegisteredVatOperation || '–ø–æ–∫09',
          accountCodeLength: settings.accountCodeLength || 3,
          salesDescriptionTemplate: settings.salesDescriptionTemplate || '{counterpart} - {document_number}',
          purchaseDescriptionTemplate: settings.purchaseDescriptionTemplate || '{counterpart} - {document_number}'
        });
      }
    } catch (err) {
      setError(err.message);
      console.error('Failed to load AI accounting settings:', err);
    } finally {
      setLoading(false);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await graphqlRequest(UPSERT_AI_ACCOUNTING_SETTINGS, {
        input: {
          companyId,
          salesRevenueAccount: formData.salesRevenueAccount,
          salesServicesAccount: formData.salesServicesAccount,
          salesReceivablesAccount: formData.salesReceivablesAccount,
          purchaseExpenseAccount: formData.purchaseExpenseAccount,
          purchasePayablesAccount: formData.purchasePayablesAccount,
          vatInputAccount: formData.vatInputAccount,
          vatOutputAccount: formData.vatOutputAccount,
          nonRegisteredPersonsAccount: formData.nonRegisteredPersonsAccount || null,
          nonRegisteredVatOperation: formData.nonRegisteredVatOperation,
          accountCodeLength: parseInt(formData.accountCodeLength),
          salesDescriptionTemplate: formData.salesDescriptionTemplate,
          purchaseDescriptionTemplate: formData.purchaseDescriptionTemplate
        }
      });

      alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ –∑–∞ AI —Å—á–µ—Ç–æ–≤–æ–¥—Å—Ç–≤–æ —Å–∞ –∑–∞–ø–∞–∑–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ');
      await loadSettings();
    } catch (err) {
      alert('–ì—Ä–µ—à–∫–∞: ' + err.message);
      console.error('Failed to save AI accounting settings:', err);
    }
  };

  const resetToDefaults = () => {
    setFormData({
      salesRevenueAccount: '701',
      salesServicesAccount: '703',
      salesReceivablesAccount: '411',
      purchaseExpenseAccount: '602',
      purchasePayablesAccount: '401',
      vatInputAccount: '4531',
      vatOutputAccount: '4531',
      nonRegisteredPersonsAccount: '',
      nonRegisteredVatOperation: '–ø–æ–∫09',
      accountCodeLength: 3,
      salesDescriptionTemplate: '{counterpart} - {document_number}',
      purchaseDescriptionTemplate: '{counterpart} - {document_number}'
    });
  };

  if (loading) {
    return <div className="text-center py-8">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</div>;
  }

  if (error) {
    return <div className="text-center py-8 text-red-600">–ì—Ä–µ—à–∫–∞: {error}</div>;
  }

  if (!companyId) {
    return (
      <div className="text-center py-8 text-gray-500">
        –ú–æ–ª—è, –∏–∑–±–µ—Ä–µ—Ç–µ —Ñ–∏—Ä–º–∞ –∑–∞ –¥–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h3 className="text-lg font-medium text-gray-900 flex items-center gap-2">
            <span className="text-2xl">ü§ñ</span>
            AI –°—á–µ—Ç–æ–≤–æ–¥–Ω–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </h3>
          <p className="mt-1 text-sm text-gray-500">
            –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–π—Ç–µ —Å–º–µ—Ç–∫–∏—Ç–µ, –∫–æ–∏—Ç–æ AI scanner —â–µ –∏–∑–ø–æ–ª–∑–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Ñ–∞–∫—Ç—É—Ä–∏
          </p>
        </div>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        {/* Sales Accounts */}
        <div className="bg-white shadow overflow-hidden sm:rounded-lg">
          <div className="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">–ü—Ä–æ–¥–∞–∂–±–∏</h3>
          </div>
          <div className="px-4 py-5 sm:p-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –ü—Ä–∏—Ö–æ–¥–∏ –æ—Ç —Å—Ç–æ–∫–∏
                </label>
                <input
                  type="text"
                  value={formData.salesRevenueAccount}
                  onChange={(e) => setFormData({ ...formData, salesRevenueAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="701"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 701 - –ü—Ä–∏—Ö–æ–¥–∏ –æ—Ç –ø—Ä–æ–¥–∞–∂–±–∞ –Ω–∞ —Å—Ç–æ–∫–∏</p>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –ü—Ä–∏—Ö–æ–¥–∏ –æ—Ç —É—Å–ª—É–≥–∏
                </label>
                <input
                  type="text"
                  value={formData.salesServicesAccount}
                  onChange={(e) => setFormData({ ...formData, salesServicesAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="703"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 703 - –ü—Ä–∏—Ö–æ–¥–∏ –æ—Ç –ø—Ä–æ–¥–∞–∂–±–∞ –Ω–∞ —É—Å–ª—É–≥–∏</p>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –í–∑–µ–º–∞–Ω–∏—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–∏
                </label>
                <input
                  type="text"
                  value={formData.salesReceivablesAccount}
                  onChange={(e) => setFormData({ ...formData, salesReceivablesAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="411"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 411 - –ö–ª–∏–µ–Ω—Ç–∏</p>
              </div>
            </div>
          </div>
        </div>

        {/* Purchase Accounts */}
        <div className="bg-white shadow overflow-hidden sm:rounded-lg">
          <div className="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">–ü–æ–∫—É–ø–∫–∏</h3>
          </div>
          <div className="px-4 py-5 sm:p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –†–∞–∑—Ö–æ–¥–∏ –∑–∞ —Å—Ç–æ–∫–∏
                </label>
                <input
                  type="text"
                  value={formData.purchaseExpenseAccount}
                  onChange={(e) => setFormData({ ...formData, purchaseExpenseAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="602"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 602 - –†–∞–∑—Ö–æ–¥–∏ –∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∏</p>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –ó–∞–¥—ä–ª–∂–µ–Ω–∏—è –∫—ä–º –¥–æ—Å—Ç–∞–≤—á–∏—Ü–∏
                </label>
                <input
                  type="text"
                  value={formData.purchasePayablesAccount}
                  onChange={(e) => setFormData({ ...formData, purchasePayablesAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="401"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 401 - –î–æ—Å—Ç–∞–≤—á–∏—Ü–∏</p>
              </div>
            </div>
          </div>
        </div>

        {/* VAT Accounts */}
        <div className="bg-white shadow overflow-hidden sm:rounded-lg">
          <div className="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">–î–î–° —Å–º–µ—Ç–∫–∏</h3>
          </div>
          <div className="px-4 py-5 sm:p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –î–î–° –∑–∞ –ø—Ä–∏—Å–ø–∞–¥–∞–Ω–µ
                </label>
                <input
                  type="text"
                  value={formData.vatInputAccount}
                  onChange={(e) => setFormData({ ...formData, vatInputAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="4531"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 4531 - –î–î–° –∑–∞ –ø—Ä–∏—Å–ø–∞–¥–∞–Ω–µ (–ø–æ–∫—É–ø–∫–∏)</p>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –î–î–° –∑–∞ –≤–Ω–∞—Å—è–Ω–µ
                </label>
                <input
                  type="text"
                  value={formData.vatOutputAccount}
                  onChange={(e) => setFormData({ ...formData, vatOutputAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="4531"
                />
                <p className="mt-1 text-xs text-gray-500">–°–º–µ—Ç–∫–∞ 4531 - –î–î–° –∑–∞ –≤–Ω–∞—Å—è–Ω–µ (–ø—Ä–æ–¥–∞–∂–±–∏)</p>
              </div>
            </div>
          </div>
        </div>

        {/* Special Cases */}
        <div className="bg-white shadow overflow-hidden sm:rounded-lg">
          <div className="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">–°–ø–µ—Ü–∏–∞–ª–Ω–∏ —Å–ª—É—á–∞–∏</h3>
          </div>
          <div className="px-4 py-5 sm:p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –°–º–µ—Ç–∫–∞ –∑–∞ –Ω–µ—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ –ª–∏—Ü–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ)
                </label>
                <input
                  type="text"
                  value={formData.nonRegisteredPersonsAccount}
                  onChange={(e) => setFormData({ ...formData, nonRegisteredPersonsAccount: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                  placeholder="–û—Å—Ç–∞–≤–µ—Ç–µ –ø—Ä–∞–∑–Ω–æ –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Å–º–µ—Ç–∫–∞"
                />
                <p className="mt-1 text-xs text-gray-500">–°–ø–µ—Ü–∏–∞–ª–Ω–∞ —Å–º–µ—Ç–∫–∞ –∑–∞ –ø–æ–∫—É–ø–∫–∏ –æ—Ç –Ω–µ—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ –ª–∏—Ü–∞ (0% –î–î–°)</p>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700">
                  –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞ –Ω–µ—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ –ª–∏—Ü–∞
                </label>
                <select
                  value={formData.nonRegisteredVatOperation}
                  onChange={(e) => setFormData({ ...formData, nonRegisteredVatOperation: e.target.value })}
                  className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                >
                  <option value="–ø–æ–∫09">–ø–æ–∫09 - –ü–æ–∫—É–ø–∫–∏ –æ—Ç –Ω–µ—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ –ª–∏—Ü–∞</option>
                  <option value="–ø–æ–∫19">–ø–æ–∫19 - –û—Å–≤–æ–±–æ–¥–µ–Ω–∏ –æ—Ç –î–î–°</option>
                  <option value="–ø–æ–∫20">–ø–æ–∫20 - –ù—É–ª–µ–≤–∞ —Å—Ç–∞–≤–∫–∞</option>
                </select>
                <p className="mt-1 text-xs text-gray-500">–û–ø–µ—Ä–∞—Ü–∏—è –≤ –¥–Ω–µ–≤–Ω–∏–∫ –î–î–° –ø–æ–∫—É–ø–∫–∏ –∫–æ–ª–æ–Ω–∞ 09</p>
              </div>
            </div>
          </div>
        </div>

        {/* Formatting Options */}
        <div className="bg-white shadow overflow-hidden sm:rounded-lg">
          <div className="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">–§–æ—Ä–º–∞—Ç–∏—Ä–∞–Ω–µ</h3>
          </div>
          <div className="px-4 py-5 sm:p-6 space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700">
                –î—ä–ª–∂–∏–Ω–∞ –Ω–∞ –∫–æ–¥–æ–≤–µ—Ç–µ –Ω–∞ —Å–º–µ—Ç–∫–∏—Ç–µ
              </label>
              <select
                value={formData.accountCodeLength}
                onChange={(e) => setFormData({ ...formData, accountCodeLength: parseInt(e.target.value) })}
                className="mt-1 block w-64 border border-gray-300 rounded-md px-3 py-2"
              >
                <option value="3">3 —Ü–∏—Ñ—Ä–∏ (–Ω–∞–ø—Ä. 701)</option>
                <option value="4">4 —Ü–∏—Ñ—Ä–∏ (–Ω–∞–ø—Ä. 7011)</option>
              </select>
              <p className="mt-1 text-xs text-gray-500">–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–¥–æ–≤–µ—Ç–µ (–Ω–∞–ø—Ä. 701 ‚Üí 7011)</p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700">
                –®–∞–±–ª–æ–Ω –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ (–ø—Ä–æ–¥–∞–∂–±–∏)
              </label>
              <input
                type="text"
                value={formData.salesDescriptionTemplate}
                onChange={(e) => setFormData({ ...formData, salesDescriptionTemplate: e.target.value })}
                className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                placeholder="{counterpart} - {document_number}"
              />
              <p className="mt-1 text-xs text-gray-500">
                –ü—Ä–æ–º–µ–Ω–ª–∏–≤–∏: {'{counterpart}'} - –∏–º–µ –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç, {'{document_number}'} - –Ω–æ–º–µ—Ä –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç
              </p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700">
                –®–∞–±–ª–æ–Ω –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ (–ø–æ–∫—É–ø–∫–∏)
              </label>
              <input
                type="text"
                value={formData.purchaseDescriptionTemplate}
                onChange={(e) => setFormData({ ...formData, purchaseDescriptionTemplate: e.target.value })}
                className="mt-1 block w-full border border-gray-300 rounded-md px-3 py-2"
                placeholder="{counterpart} - {document_number}"
              />
              <p className="mt-1 text-xs text-gray-500">
                –ü—Ä–æ–º–µ–Ω–ª–∏–≤–∏: {'{counterpart}'} - –∏–º–µ –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç, {'{document_number}'} - –Ω–æ–º–µ—Ä –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç
              </p>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex justify-between items-center">
          <button
            type="button"
            onClick={resetToDefaults}
            className="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
          >
            üîÑ –í—ä–∑—Å—Ç–∞–Ω–æ–≤–∏ –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
          </button>
          <button
            type="submit"
            className="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700"
          >
            üíæ –ó–∞–ø–∞–∑–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ
          </button>
        </div>
      </form>

      {/* Info Card */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h4 className="font-semibold mb-2 flex items-center gap-2">
          üí° –ö–∞–∫ —Ä–∞–±–æ—Ç–∏
        </h4>
        <ul className="list-disc list-inside space-y-1 text-sm text-gray-600">
          <li>AI Scanner –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∏–∑–ø–æ–ª–∑–≤–∞ —Ç–µ–∑–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Å—á–µ—Ç–æ–≤–æ–¥–Ω–∏ –∑–∞–ø–∏—Å–∏</li>
          <li>–°–º–µ—Ç–∫–∏—Ç–µ —Å–µ –∏–∑–±–∏—Ä–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ä–∑ –æ—Å–Ω–æ–≤–∞ –Ω–∞ —Ç–∏–ø–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–ø—Ä–æ–¥–∞–∂–±–∞/–ø–æ–∫—É–ø–∫–∞)</li>
          <li>–û–ø–∏—Å–∞–Ω–∏—è—Ç–∞ —Å–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞—Ç –æ—Ç —à–∞–±–ª–æ–Ω–∏—Ç–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç —Ñ–∞–∫—Ç—É—Ä–∞—Ç–∞</li>
          <li>–ö–æ–¥–æ–≤–µ—Ç–µ –Ω–∞ —Å–º–µ—Ç–∫–∏—Ç–µ —Å–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–ø—Ä—è–º–æ –∏–∑–±—Ä–∞–Ω–∞—Ç–∞ –¥—ä–ª–∂–∏–Ω–∞</li>
        </ul>
      </div>
    </div>
  );
}
